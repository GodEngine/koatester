'use strict'

const childProcess = require('child_process')
const fs = require('fs')
const views = require('../configs/views')

let argv = process.argv.slice(2)  // 前两个一个是node地址 一个是执行script的地址
let config = {}
argv.forEach((item) => {
  let [key, value = key] = item.split('=')

  config[key] = value
})
let init = () => {
  try {
    let routerName = config.router
    if (!routerName) {
      return console.error('必须填写router路径 例如：`npm run build:router -- [router]`')
    }

    if (Object.keys(views).map(item => String(item).toLowerCase()).includes(String(routerName).toLowerCase())) {
      return console.error(`该router已存在，请重新选择 router: ${routerName}`)
    }

    let userName = childProcess.execSync(`git config user.name`).toString()

    if (!userName) {
      return console.error('木有获取到你的git信息')
    }

    let templeteData = {
      title: routerName,
      author: userName.replace(/\r|\n/g, ''),
      date: new Date(),
      data: JSON.stringify(Object.assign(views, {
        [routerName]: {
          default: 'hbs',
          map: {
            hbs: 'handlebars'
          }
        }
      }), null, 2).replace(/"/g, '\'').replace(/'(\w+)?':/g, (_, reg) => `${reg}:`)
    }

    // 开始生成目录结构
    childProcess.execSync(`( cd apps; mkdir -p ${routerName} ${routerName}/routes ${routerName}/views ${routerName}/src ${routerName}/src/js ${routerName}/src/css ${routerName}/src/tpl ${routerName}/src/img )`)
    childProcess.execSync(`cp gulp-tmpl/* apps/${routerName}/src `)
    childProcess.execSync(`( cd apps/${routerName}/routes; echo > index.js )`)
    fs.writeFileSync(`./apps/${routerName}/routes/index.js`, routerTemplete.replace(/\$\$(\w+)?\$\$/g, (_, reg) => templeteData[reg]))
    childProcess.execSync(`( cd apps/${routerName}/views; echo > index.hbs )`)
    fs.writeFileSync(`./apps/${routerName}/views/index.hbs`, viewTemplete.replace(/\$\$(\w+)?\$\$/g, (_, reg) => templeteData[reg]))
    fs.writeFileSync(`./configs/views.js`, viewConfifTemplete.replace(/\$\$(\w+)?\$\$/g, (_, reg) => templeteData[reg]))
  } catch (e) {
    console.error('未知错误，请检查调用姿势', e.message)
  }
}

let routerTemplete = `/**
  * This file is automatically generated.
  * @Author: $$author$$
  * @Date: $$date$$
 */
module.exports = (router, logger, configs) => {
  router.get('/', function * () {
    yield this.render('index')
  })
}
`

let viewTemplete = `<!DOCTYPE html>
<html lang="zh-cn">
<head>
  <meta charset="utf-8">
  <title>$$title$$</title>
</head>
<body>
  <h1>Hello $$author$$</h1>
</body>
</html>
`

let viewConfifTemplete = `/**
  * This file is automatically generated.
  * @Author: $$author$$
  * @Date: $$date$$
 */
module.exports = $$data$$
`

init()
