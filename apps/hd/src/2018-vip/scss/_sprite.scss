// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$btn-start-name: 'btn_start';
$btn-start-x: 0px;
$btn-start-y: 0px;
$btn-start-offset-x: 0px;
$btn-start-offset-y: 0px;
$btn-start-width: 264px;
$btn-start-height: 118px;
$btn-start-total-width: 603px;
$btn-start-total-height: 2497px;
$btn-start-image: '../img/sprite.png';
$btn-start: (0px, 0px, 0px, 0px, 264px, 118px, 603px, 2497px, '../img/sprite.png', 'btn_start', );
$result-button-name: 'result-button';
$result-button-x: 0px;
$result-button-y: 120px;
$result-button-offset-x: 0px;
$result-button-offset-y: -120px;
$result-button-width: 350px;
$result-button-height: 130px;
$result-button-total-width: 603px;
$result-button-total-height: 2497px;
$result-button-image: '../img/sprite.png';
$result-button: (0px, 120px, 0px, -120px, 350px, 130px, 603px, 2497px, '../img/sprite.png', 'result-button', );
$ans1a-name: 'ans1a';
$ans1a-x: 0px;
$ans1a-y: 252px;
$ans1a-offset-x: 0px;
$ans1a-offset-y: -252px;
$ans1a-width: 427px;
$ans1a-height: 133px;
$ans1a-total-width: 603px;
$ans1a-total-height: 2497px;
$ans1a-image: '../img/sprite.png';
$ans1a: (0px, 252px, 0px, -252px, 427px, 133px, 603px, 2497px, '../img/sprite.png', 'ans1a', );
$ans2a-name: 'ans2a';
$ans2a-x: 0px;
$ans2a-y: 387px;
$ans2a-offset-x: 0px;
$ans2a-offset-y: -387px;
$ans2a-width: 427px;
$ans2a-height: 133px;
$ans2a-total-width: 603px;
$ans2a-total-height: 2497px;
$ans2a-image: '../img/sprite.png';
$ans2a: (0px, 387px, 0px, -387px, 427px, 133px, 603px, 2497px, '../img/sprite.png', 'ans2a', );
$ans3a-name: 'ans3a';
$ans3a-x: 0px;
$ans3a-y: 522px;
$ans3a-offset-x: 0px;
$ans3a-offset-y: -522px;
$ans3a-width: 427px;
$ans3a-height: 133px;
$ans3a-total-width: 603px;
$ans3a-total-height: 2497px;
$ans3a-image: '../img/sprite.png';
$ans3a: (0px, 522px, 0px, -522px, 427px, 133px, 603px, 2497px, '../img/sprite.png', 'ans3a', );
$ans4a-name: 'ans4a';
$ans4a-x: 0px;
$ans4a-y: 657px;
$ans4a-offset-x: 0px;
$ans4a-offset-y: -657px;
$ans4a-width: 427px;
$ans4a-height: 133px;
$ans4a-total-width: 603px;
$ans4a-total-height: 2497px;
$ans4a-image: '../img/sprite.png';
$ans4a: (0px, 657px, 0px, -657px, 427px, 133px, 603px, 2497px, '../img/sprite.png', 'ans4a', );
$name-input-name: 'name-input';
$name-input-x: 0px;
$name-input-y: 792px;
$name-input-offset-x: 0px;
$name-input-offset-y: -792px;
$name-input-width: 548px;
$name-input-height: 133px;
$name-input-total-width: 603px;
$name-input-total-height: 2497px;
$name-input-image: '../img/sprite.png';
$name-input: (0px, 792px, 0px, -792px, 548px, 133px, 603px, 2497px, '../img/sprite.png', 'name-input', );
$ans1b-name: 'ans1b';
$ans1b-x: 0px;
$ans1b-y: 927px;
$ans1b-offset-x: 0px;
$ans1b-offset-y: -927px;
$ans1b-width: 427px;
$ans1b-height: 143px;
$ans1b-total-width: 603px;
$ans1b-total-height: 2497px;
$ans1b-image: '../img/sprite.png';
$ans1b: (0px, 927px, 0px, -927px, 427px, 143px, 603px, 2497px, '../img/sprite.png', 'ans1b', );
$ans4b-name: 'ans4b';
$ans4b-x: 0px;
$ans4b-y: 1072px;
$ans4b-offset-x: 0px;
$ans4b-offset-y: -1072px;
$ans4b-width: 427px;
$ans4b-height: 143px;
$ans4b-total-width: 603px;
$ans4b-total-height: 2497px;
$ans4b-image: '../img/sprite.png';
$ans4b: (0px, 1072px, 0px, -1072px, 427px, 143px, 603px, 2497px, '../img/sprite.png', 'ans4b', );
$ans3b-name: 'ans3b';
$ans3b-x: 0px;
$ans3b-y: 1217px;
$ans3b-offset-x: 0px;
$ans3b-offset-y: -1217px;
$ans3b-width: 427px;
$ans3b-height: 143px;
$ans3b-total-width: 603px;
$ans3b-total-height: 2497px;
$ans3b-image: '../img/sprite.png';
$ans3b: (0px, 1217px, 0px, -1217px, 427px, 143px, 603px, 2497px, '../img/sprite.png', 'ans3b', );
$ans2b-name: 'ans2b';
$ans2b-x: 0px;
$ans2b-y: 1362px;
$ans2b-offset-x: 0px;
$ans2b-offset-y: -1362px;
$ans2b-width: 427px;
$ans2b-height: 143px;
$ans2b-total-width: 603px;
$ans2b-total-height: 2497px;
$ans2b-image: '../img/sprite.png';
$ans2b: (0px, 1362px, 0px, -1362px, 427px, 143px, 603px, 2497px, '../img/sprite.png', 'ans2b', );
$line-name: 'line';
$line-x: 0px;
$line-y: 1507px;
$line-offset-x: 0px;
$line-offset-y: -1507px;
$line-width: 603px;
$line-height: 180px;
$line-total-width: 603px;
$line-total-height: 2497px;
$line-image: '../img/sprite.png';
$line: (0px, 1507px, 0px, -1507px, 603px, 180px, 603px, 2497px, '../img/sprite.png', 'line', );
$loading-name: 'loading';
$loading-x: 0px;
$loading-y: 1689px;
$loading-offset-x: 0px;
$loading-offset-y: -1689px;
$loading-width: 228px;
$loading-height: 236px;
$loading-total-width: 603px;
$loading-total-height: 2497px;
$loading-image: '../img/sprite.png';
$loading: (0px, 1689px, 0px, -1689px, 228px, 236px, 603px, 2497px, '../img/sprite.png', 'loading', );
$start-button-name: 'start-button';
$start-button-x: 0px;
$start-button-y: 1927px;
$start-button-offset-x: 0px;
$start-button-offset-y: -1927px;
$start-button-width: 323px;
$start-button-height: 260px;
$start-button-total-width: 603px;
$start-button-total-height: 2497px;
$start-button-image: '../img/sprite.png';
$start-button: (0px, 1927px, 0px, -1927px, 323px, 260px, 603px, 2497px, '../img/sprite.png', 'start-button', );
$pen-name: 'pen';
$pen-x: 0px;
$pen-y: 2189px;
$pen-offset-x: 0px;
$pen-offset-y: -2189px;
$pen-width: 475px;
$pen-height: 308px;
$pen-total-width: 603px;
$pen-total-height: 2497px;
$pen-image: '../img/sprite.png';
$pen: (0px, 2189px, 0px, -2189px, 475px, 308px, 603px, 2497px, '../img/sprite.png', 'pen', );
$spritesheet-width: 603px;
$spritesheet-height: 2497px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($btn-start, $result-button, $ans1a, $ans2a, $ans3a, $ans4a, $name-input, $ans1b, $ans4b, $ans3b, $ans2b, $line, $loading, $start-button, $pen, );
$spritesheet: (603px, 2497px, '../img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

%-sprite-common {
  background-image: url(#{$spritesheet-image});
}

@mixin sprite-item($sprite) {
  @extend %-sprite-common;

  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite-item($sprite);
    }
  }
}
